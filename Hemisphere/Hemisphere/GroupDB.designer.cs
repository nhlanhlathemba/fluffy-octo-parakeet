#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hemisphere
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="groupDB")]
	public partial class GroupDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPRODUCT(PRODUCT instance);
    partial void UpdatePRODUCT(PRODUCT instance);
    partial void DeletePRODUCT(PRODUCT instance);
    partial void InsertSHOPPING_CART_ITEM(SHOPPING_CART_ITEM instance);
    partial void UpdateSHOPPING_CART_ITEM(SHOPPING_CART_ITEM instance);
    partial void DeleteSHOPPING_CART_ITEM(SHOPPING_CART_ITEM instance);
    partial void InsertUSER(USER instance);
    partial void UpdateUSER(USER instance);
    partial void DeleteUSER(USER instance);
    partial void InsertINVOICE(INVOICE instance);
    partial void UpdateINVOICE(INVOICE instance);
    partial void DeleteINVOICE(INVOICE instance);
    partial void InsertINVOICE_PRODUCT(INVOICE_PRODUCT instance);
    partial void UpdateINVOICE_PRODUCT(INVOICE_PRODUCT instance);
    partial void DeleteINVOICE_PRODUCT(INVOICE_PRODUCT instance);
    partial void InsertCOMMENT(COMMENT instance);
    partial void UpdateCOMMENT(COMMENT instance);
    partial void DeleteCOMMENT(COMMENT instance);
    #endregion
		
		public GroupDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["groupDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GroupDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GroupDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GroupDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GroupDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PRODUCT> PRODUCTs
		{
			get
			{
				return this.GetTable<PRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<SHOPPING_CART_ITEM> SHOPPING_CART_ITEMs
		{
			get
			{
				return this.GetTable<SHOPPING_CART_ITEM>();
			}
		}
		
		public System.Data.Linq.Table<USER> USERs
		{
			get
			{
				return this.GetTable<USER>();
			}
		}
		
		public System.Data.Linq.Table<INVOICE> INVOICEs
		{
			get
			{
				return this.GetTable<INVOICE>();
			}
		}
		
		public System.Data.Linq.Table<INVOICE_PRODUCT> INVOICE_PRODUCTs
		{
			get
			{
				return this.GetTable<INVOICE_PRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<COMMENT> COMMENTs
		{
			get
			{
				return this.GetTable<COMMENT>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCT")]
	public partial class PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PROD_ID;
		
		private string _PROD_NAME;
		
		private double _PROD_PRICE;
		
		private string _PROD_CATEGORY;
		
		private string _PROD_DESCRIPTION;
		
		private int _PROD_QUANTITY_AVAILABLE;
		
		private string _PROD_IMAGE_PATH;
		
		private string _PROD_ISBN;
		
		private string _PROD_AUTHOR;
		
		private EntitySet<SHOPPING_CART_ITEM> _SHOPPING_CART_ITEMs;
		
		private EntitySet<INVOICE_PRODUCT> _INVOICE_PRODUCTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPROD_IDChanging(int value);
    partial void OnPROD_IDChanged();
    partial void OnPROD_NAMEChanging(string value);
    partial void OnPROD_NAMEChanged();
    partial void OnPROD_PRICEChanging(double value);
    partial void OnPROD_PRICEChanged();
    partial void OnPROD_CATEGORYChanging(string value);
    partial void OnPROD_CATEGORYChanged();
    partial void OnPROD_DESCRIPTIONChanging(string value);
    partial void OnPROD_DESCRIPTIONChanged();
    partial void OnPROD_QUANTITY_AVAILABLEChanging(int value);
    partial void OnPROD_QUANTITY_AVAILABLEChanged();
    partial void OnPROD_IMAGE_PATHChanging(string value);
    partial void OnPROD_IMAGE_PATHChanged();
    partial void OnPROD_ISBNChanging(string value);
    partial void OnPROD_ISBNChanged();
    partial void OnPROD_AUTHORChanging(string value);
    partial void OnPROD_AUTHORChanged();
    #endregion
		
		public PRODUCT()
		{
			this._SHOPPING_CART_ITEMs = new EntitySet<SHOPPING_CART_ITEM>(new Action<SHOPPING_CART_ITEM>(this.attach_SHOPPING_CART_ITEMs), new Action<SHOPPING_CART_ITEM>(this.detach_SHOPPING_CART_ITEMs));
			this._INVOICE_PRODUCTs = new EntitySet<INVOICE_PRODUCT>(new Action<INVOICE_PRODUCT>(this.attach_INVOICE_PRODUCTs), new Action<INVOICE_PRODUCT>(this.detach_INVOICE_PRODUCTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PROD_ID
		{
			get
			{
				return this._PROD_ID;
			}
			set
			{
				if ((this._PROD_ID != value))
				{
					this.OnPROD_IDChanging(value);
					this.SendPropertyChanging();
					this._PROD_ID = value;
					this.SendPropertyChanged("PROD_ID");
					this.OnPROD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_NAME", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PROD_NAME
		{
			get
			{
				return this._PROD_NAME;
			}
			set
			{
				if ((this._PROD_NAME != value))
				{
					this.OnPROD_NAMEChanging(value);
					this.SendPropertyChanging();
					this._PROD_NAME = value;
					this.SendPropertyChanged("PROD_NAME");
					this.OnPROD_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_PRICE", DbType="Float NOT NULL")]
		public double PROD_PRICE
		{
			get
			{
				return this._PROD_PRICE;
			}
			set
			{
				if ((this._PROD_PRICE != value))
				{
					this.OnPROD_PRICEChanging(value);
					this.SendPropertyChanging();
					this._PROD_PRICE = value;
					this.SendPropertyChanged("PROD_PRICE");
					this.OnPROD_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_CATEGORY", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string PROD_CATEGORY
		{
			get
			{
				return this._PROD_CATEGORY;
			}
			set
			{
				if ((this._PROD_CATEGORY != value))
				{
					this.OnPROD_CATEGORYChanging(value);
					this.SendPropertyChanging();
					this._PROD_CATEGORY = value;
					this.SendPropertyChanged("PROD_CATEGORY");
					this.OnPROD_CATEGORYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_DESCRIPTION", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PROD_DESCRIPTION
		{
			get
			{
				return this._PROD_DESCRIPTION;
			}
			set
			{
				if ((this._PROD_DESCRIPTION != value))
				{
					this.OnPROD_DESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._PROD_DESCRIPTION = value;
					this.SendPropertyChanged("PROD_DESCRIPTION");
					this.OnPROD_DESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_QUANTITY_AVAILABLE", DbType="Int NOT NULL")]
		public int PROD_QUANTITY_AVAILABLE
		{
			get
			{
				return this._PROD_QUANTITY_AVAILABLE;
			}
			set
			{
				if ((this._PROD_QUANTITY_AVAILABLE != value))
				{
					this.OnPROD_QUANTITY_AVAILABLEChanging(value);
					this.SendPropertyChanging();
					this._PROD_QUANTITY_AVAILABLE = value;
					this.SendPropertyChanged("PROD_QUANTITY_AVAILABLE");
					this.OnPROD_QUANTITY_AVAILABLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_IMAGE_PATH", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PROD_IMAGE_PATH
		{
			get
			{
				return this._PROD_IMAGE_PATH;
			}
			set
			{
				if ((this._PROD_IMAGE_PATH != value))
				{
					this.OnPROD_IMAGE_PATHChanging(value);
					this.SendPropertyChanging();
					this._PROD_IMAGE_PATH = value;
					this.SendPropertyChanged("PROD_IMAGE_PATH");
					this.OnPROD_IMAGE_PATHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_ISBN", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string PROD_ISBN
		{
			get
			{
				return this._PROD_ISBN;
			}
			set
			{
				if ((this._PROD_ISBN != value))
				{
					this.OnPROD_ISBNChanging(value);
					this.SendPropertyChanging();
					this._PROD_ISBN = value;
					this.SendPropertyChanged("PROD_ISBN");
					this.OnPROD_ISBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_AUTHOR", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PROD_AUTHOR
		{
			get
			{
				return this._PROD_AUTHOR;
			}
			set
			{
				if ((this._PROD_AUTHOR != value))
				{
					this.OnPROD_AUTHORChanging(value);
					this.SendPropertyChanging();
					this._PROD_AUTHOR = value;
					this.SendPropertyChanged("PROD_AUTHOR");
					this.OnPROD_AUTHORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_SHOPPING_CART_ITEM", Storage="_SHOPPING_CART_ITEMs", ThisKey="PROD_ID", OtherKey="ProductID")]
		public EntitySet<SHOPPING_CART_ITEM> SHOPPING_CART_ITEMs
		{
			get
			{
				return this._SHOPPING_CART_ITEMs;
			}
			set
			{
				this._SHOPPING_CART_ITEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_INVOICE_PRODUCT", Storage="_INVOICE_PRODUCTs", ThisKey="PROD_ID", OtherKey="PROD_ID")]
		public EntitySet<INVOICE_PRODUCT> INVOICE_PRODUCTs
		{
			get
			{
				return this._INVOICE_PRODUCTs;
			}
			set
			{
				this._INVOICE_PRODUCTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SHOPPING_CART_ITEMs(SHOPPING_CART_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = this;
		}
		
		private void detach_SHOPPING_CART_ITEMs(SHOPPING_CART_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = null;
		}
		
		private void attach_INVOICE_PRODUCTs(INVOICE_PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = this;
		}
		
		private void detach_INVOICE_PRODUCTs(INVOICE_PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SHOPPING_CART_ITEMS")]
	public partial class SHOPPING_CART_ITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemID;
		
		private int _ProductID;
		
		private string _ProductName;
		
		private int _Quantity;
		
		private double _ItemPrice;
		
		private System.Nullable<double> _TotalPrice;
		
		private int _USER_ID;
		
		private EntityRef<PRODUCT> _PRODUCT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnItemPriceChanging(double value);
    partial void OnItemPriceChanged();
    partial void OnTotalPriceChanging(System.Nullable<double> value);
    partial void OnTotalPriceChanged();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    #endregion
		
		public SHOPPING_CART_ITEM()
		{
			this._PRODUCT = default(EntityRef<PRODUCT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemPrice", DbType="Float NOT NULL")]
		public double ItemPrice
		{
			get
			{
				return this._ItemPrice;
			}
			set
			{
				if ((this._ItemPrice != value))
				{
					this.OnItemPriceChanging(value);
					this.SendPropertyChanging();
					this._ItemPrice = value;
					this.SendPropertyChanged("ItemPrice");
					this.OnItemPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float")]
		public System.Nullable<double> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int NOT NULL")]
		public int USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_SHOPPING_CART_ITEM", Storage="_PRODUCT", ThisKey="ProductID", OtherKey="PROD_ID", IsForeignKey=true)]
		public PRODUCT PRODUCT
		{
			get
			{
				return this._PRODUCT.Entity;
			}
			set
			{
				PRODUCT previousValue = this._PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT.Entity = null;
						previousValue.SHOPPING_CART_ITEMs.Remove(this);
					}
					this._PRODUCT.Entity = value;
					if ((value != null))
					{
						value.SHOPPING_CART_ITEMs.Add(this);
						this._ProductID = value.PROD_ID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("PRODUCT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[USER]")]
	public partial class USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _USER_ID;
		
		private string _USER_SURNAME;
		
		private string _USER_NAME;
		
		private char _USER_GENDER;
		
		private string _USER_PHONE_NUMBER;
		
		private string _USER_EMAIL_ADDRESS;
		
		private char _USER_AUTHENTICATION_LEVEL;
		
		private string _USER_USER_PASSWORD;
		
		private string _SECURITY_QUESTION;
		
		private string _ANSWER;
		
		private System.DateTime _REG_DATE;
		
		private EntitySet<INVOICE> _INVOICEs;
		
		private EntitySet<COMMENT> _COMMENTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    partial void OnUSER_SURNAMEChanging(string value);
    partial void OnUSER_SURNAMEChanged();
    partial void OnUSER_NAMEChanging(string value);
    partial void OnUSER_NAMEChanged();
    partial void OnUSER_GENDERChanging(char value);
    partial void OnUSER_GENDERChanged();
    partial void OnUSER_PHONE_NUMBERChanging(string value);
    partial void OnUSER_PHONE_NUMBERChanged();
    partial void OnUSER_EMAIL_ADDRESSChanging(string value);
    partial void OnUSER_EMAIL_ADDRESSChanged();
    partial void OnUSER_AUTHENTICATION_LEVELChanging(char value);
    partial void OnUSER_AUTHENTICATION_LEVELChanged();
    partial void OnUSER_USER_PASSWORDChanging(string value);
    partial void OnUSER_USER_PASSWORDChanged();
    partial void OnSECURITY_QUESTIONChanging(string value);
    partial void OnSECURITY_QUESTIONChanged();
    partial void OnANSWERChanging(string value);
    partial void OnANSWERChanged();
    partial void OnREG_DATEChanging(System.DateTime value);
    partial void OnREG_DATEChanged();
    #endregion
		
		public USER()
		{
			this._INVOICEs = new EntitySet<INVOICE>(new Action<INVOICE>(this.attach_INVOICEs), new Action<INVOICE>(this.detach_INVOICEs));
			this._COMMENTs = new EntitySet<COMMENT>(new Action<COMMENT>(this.attach_COMMENTs), new Action<COMMENT>(this.detach_COMMENTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_SURNAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string USER_SURNAME
		{
			get
			{
				return this._USER_SURNAME;
			}
			set
			{
				if ((this._USER_SURNAME != value))
				{
					this.OnUSER_SURNAMEChanging(value);
					this.SendPropertyChanging();
					this._USER_SURNAME = value;
					this.SendPropertyChanged("USER_SURNAME");
					this.OnUSER_SURNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string USER_NAME
		{
			get
			{
				return this._USER_NAME;
			}
			set
			{
				if ((this._USER_NAME != value))
				{
					this.OnUSER_NAMEChanging(value);
					this.SendPropertyChanging();
					this._USER_NAME = value;
					this.SendPropertyChanged("USER_NAME");
					this.OnUSER_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_GENDER", DbType="Char(1) NOT NULL")]
		public char USER_GENDER
		{
			get
			{
				return this._USER_GENDER;
			}
			set
			{
				if ((this._USER_GENDER != value))
				{
					this.OnUSER_GENDERChanging(value);
					this.SendPropertyChanging();
					this._USER_GENDER = value;
					this.SendPropertyChanged("USER_GENDER");
					this.OnUSER_GENDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_PHONE_NUMBER", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string USER_PHONE_NUMBER
		{
			get
			{
				return this._USER_PHONE_NUMBER;
			}
			set
			{
				if ((this._USER_PHONE_NUMBER != value))
				{
					this.OnUSER_PHONE_NUMBERChanging(value);
					this.SendPropertyChanging();
					this._USER_PHONE_NUMBER = value;
					this.SendPropertyChanged("USER_PHONE_NUMBER");
					this.OnUSER_PHONE_NUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_EMAIL_ADDRESS", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string USER_EMAIL_ADDRESS
		{
			get
			{
				return this._USER_EMAIL_ADDRESS;
			}
			set
			{
				if ((this._USER_EMAIL_ADDRESS != value))
				{
					this.OnUSER_EMAIL_ADDRESSChanging(value);
					this.SendPropertyChanging();
					this._USER_EMAIL_ADDRESS = value;
					this.SendPropertyChanged("USER_EMAIL_ADDRESS");
					this.OnUSER_EMAIL_ADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_AUTHENTICATION_LEVEL", DbType="Char(1) NOT NULL")]
		public char USER_AUTHENTICATION_LEVEL
		{
			get
			{
				return this._USER_AUTHENTICATION_LEVEL;
			}
			set
			{
				if ((this._USER_AUTHENTICATION_LEVEL != value))
				{
					this.OnUSER_AUTHENTICATION_LEVELChanging(value);
					this.SendPropertyChanging();
					this._USER_AUTHENTICATION_LEVEL = value;
					this.SendPropertyChanged("USER_AUTHENTICATION_LEVEL");
					this.OnUSER_AUTHENTICATION_LEVELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_USER_PASSWORD", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string USER_USER_PASSWORD
		{
			get
			{
				return this._USER_USER_PASSWORD;
			}
			set
			{
				if ((this._USER_USER_PASSWORD != value))
				{
					this.OnUSER_USER_PASSWORDChanging(value);
					this.SendPropertyChanging();
					this._USER_USER_PASSWORD = value;
					this.SendPropertyChanged("USER_USER_PASSWORD");
					this.OnUSER_USER_PASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SECURITY_QUESTION", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SECURITY_QUESTION
		{
			get
			{
				return this._SECURITY_QUESTION;
			}
			set
			{
				if ((this._SECURITY_QUESTION != value))
				{
					this.OnSECURITY_QUESTIONChanging(value);
					this.SendPropertyChanging();
					this._SECURITY_QUESTION = value;
					this.SendPropertyChanged("SECURITY_QUESTION");
					this.OnSECURITY_QUESTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANSWER", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ANSWER
		{
			get
			{
				return this._ANSWER;
			}
			set
			{
				if ((this._ANSWER != value))
				{
					this.OnANSWERChanging(value);
					this.SendPropertyChanging();
					this._ANSWER = value;
					this.SendPropertyChanged("ANSWER");
					this.OnANSWERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REG_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime REG_DATE
		{
			get
			{
				return this._REG_DATE;
			}
			set
			{
				if ((this._REG_DATE != value))
				{
					this.OnREG_DATEChanging(value);
					this.SendPropertyChanging();
					this._REG_DATE = value;
					this.SendPropertyChanged("REG_DATE");
					this.OnREG_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_INVOICE", Storage="_INVOICEs", ThisKey="USER_ID", OtherKey="USER_ID")]
		public EntitySet<INVOICE> INVOICEs
		{
			get
			{
				return this._INVOICEs;
			}
			set
			{
				this._INVOICEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_COMMENT", Storage="_COMMENTs", ThisKey="USER_ID", OtherKey="USER_ID")]
		public EntitySet<COMMENT> COMMENTs
		{
			get
			{
				return this._COMMENTs;
			}
			set
			{
				this._COMMENTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INVOICEs(INVOICE entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_INVOICEs(INVOICE entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
		
		private void attach_COMMENTs(COMMENT entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_COMMENTs(COMMENT entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INVOICE")]
	public partial class INVOICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _INV_NUMBER;
		
		private int _USER_ID;
		
		private System.DateTime _INV_DATE;
		
		private EntitySet<INVOICE_PRODUCT> _INVOICE_PRODUCTs;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnINV_NUMBERChanging(int value);
    partial void OnINV_NUMBERChanged();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    partial void OnINV_DATEChanging(System.DateTime value);
    partial void OnINV_DATEChanged();
    #endregion
		
		public INVOICE()
		{
			this._INVOICE_PRODUCTs = new EntitySet<INVOICE_PRODUCT>(new Action<INVOICE_PRODUCT>(this.attach_INVOICE_PRODUCTs), new Action<INVOICE_PRODUCT>(this.detach_INVOICE_PRODUCTs));
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INV_NUMBER", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int INV_NUMBER
		{
			get
			{
				return this._INV_NUMBER;
			}
			set
			{
				if ((this._INV_NUMBER != value))
				{
					this.OnINV_NUMBERChanging(value);
					this.SendPropertyChanging();
					this._INV_NUMBER = value;
					this.SendPropertyChanged("INV_NUMBER");
					this.OnINV_NUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int NOT NULL")]
		public int USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INV_DATE", DbType="Date NOT NULL")]
		public System.DateTime INV_DATE
		{
			get
			{
				return this._INV_DATE;
			}
			set
			{
				if ((this._INV_DATE != value))
				{
					this.OnINV_DATEChanging(value);
					this.SendPropertyChanging();
					this._INV_DATE = value;
					this.SendPropertyChanged("INV_DATE");
					this.OnINV_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INVOICE_INVOICE_PRODUCT", Storage="_INVOICE_PRODUCTs", ThisKey="INV_NUMBER", OtherKey="INV_NUMBER")]
		public EntitySet<INVOICE_PRODUCT> INVOICE_PRODUCTs
		{
			get
			{
				return this._INVOICE_PRODUCTs;
			}
			set
			{
				this._INVOICE_PRODUCTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_INVOICE", Storage="_USER", ThisKey="USER_ID", OtherKey="USER_ID", IsForeignKey=true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.INVOICEs.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.INVOICEs.Add(this);
						this._USER_ID = value.USER_ID;
					}
					else
					{
						this._USER_ID = default(int);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INVOICE_PRODUCTs(INVOICE_PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.INVOICE = this;
		}
		
		private void detach_INVOICE_PRODUCTs(INVOICE_PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.INVOICE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INVOICE_PRODUCT")]
	public partial class INVOICE_PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PROD_ID;
		
		private int _INV_NUMBER;
		
		private int _QUANTITY;
		
		private EntityRef<INVOICE> _INVOICE;
		
		private EntityRef<PRODUCT> _PRODUCT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPROD_IDChanging(int value);
    partial void OnPROD_IDChanged();
    partial void OnINV_NUMBERChanging(int value);
    partial void OnINV_NUMBERChanged();
    partial void OnQUANTITYChanging(int value);
    partial void OnQUANTITYChanged();
    #endregion
		
		public INVOICE_PRODUCT()
		{
			this._INVOICE = default(EntityRef<INVOICE>);
			this._PRODUCT = default(EntityRef<PRODUCT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PROD_ID
		{
			get
			{
				return this._PROD_ID;
			}
			set
			{
				if ((this._PROD_ID != value))
				{
					if (this._PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPROD_IDChanging(value);
					this.SendPropertyChanging();
					this._PROD_ID = value;
					this.SendPropertyChanged("PROD_ID");
					this.OnPROD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INV_NUMBER", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int INV_NUMBER
		{
			get
			{
				return this._INV_NUMBER;
			}
			set
			{
				if ((this._INV_NUMBER != value))
				{
					if (this._INVOICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINV_NUMBERChanging(value);
					this.SendPropertyChanging();
					this._INV_NUMBER = value;
					this.SendPropertyChanged("INV_NUMBER");
					this.OnINV_NUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int NOT NULL")]
		public int QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INVOICE_INVOICE_PRODUCT", Storage="_INVOICE", ThisKey="INV_NUMBER", OtherKey="INV_NUMBER", IsForeignKey=true)]
		public INVOICE INVOICE
		{
			get
			{
				return this._INVOICE.Entity;
			}
			set
			{
				INVOICE previousValue = this._INVOICE.Entity;
				if (((previousValue != value) 
							|| (this._INVOICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INVOICE.Entity = null;
						previousValue.INVOICE_PRODUCTs.Remove(this);
					}
					this._INVOICE.Entity = value;
					if ((value != null))
					{
						value.INVOICE_PRODUCTs.Add(this);
						this._INV_NUMBER = value.INV_NUMBER;
					}
					else
					{
						this._INV_NUMBER = default(int);
					}
					this.SendPropertyChanged("INVOICE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_INVOICE_PRODUCT", Storage="_PRODUCT", ThisKey="PROD_ID", OtherKey="PROD_ID", IsForeignKey=true)]
		public PRODUCT PRODUCT
		{
			get
			{
				return this._PRODUCT.Entity;
			}
			set
			{
				PRODUCT previousValue = this._PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT.Entity = null;
						previousValue.INVOICE_PRODUCTs.Remove(this);
					}
					this._PRODUCT.Entity = value;
					if ((value != null))
					{
						value.INVOICE_PRODUCTs.Add(this);
						this._PROD_ID = value.PROD_ID;
					}
					else
					{
						this._PROD_ID = default(int);
					}
					this.SendPropertyChanged("PRODUCT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COMMENT")]
	public partial class COMMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CMT_ID;
		
		private int _USER_ID;
		
		private string _COMMENT1;
		
		private System.DateTime _DATE;
		
		private string _SUBJECT;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCMT_IDChanging(int value);
    partial void OnCMT_IDChanged();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    partial void OnCOMMENT1Changing(string value);
    partial void OnCOMMENT1Changed();
    partial void OnDATEChanging(System.DateTime value);
    partial void OnDATEChanged();
    partial void OnSUBJECTChanging(string value);
    partial void OnSUBJECTChanged();
    #endregion
		
		public COMMENT()
		{
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMT_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CMT_ID
		{
			get
			{
				return this._CMT_ID;
			}
			set
			{
				if ((this._CMT_ID != value))
				{
					this.OnCMT_IDChanging(value);
					this.SendPropertyChanging();
					this._CMT_ID = value;
					this.SendPropertyChanged("CMT_ID");
					this.OnCMT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int NOT NULL")]
		public int USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="COMMENT", Storage="_COMMENT1", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string COMMENT1
		{
			get
			{
				return this._COMMENT1;
			}
			set
			{
				if ((this._COMMENT1 != value))
				{
					this.OnCOMMENT1Changing(value);
					this.SendPropertyChanging();
					this._COMMENT1 = value;
					this.SendPropertyChanged("COMMENT1");
					this.OnCOMMENT1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime DATE
		{
			get
			{
				return this._DATE;
			}
			set
			{
				if ((this._DATE != value))
				{
					this.OnDATEChanging(value);
					this.SendPropertyChanging();
					this._DATE = value;
					this.SendPropertyChanged("DATE");
					this.OnDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBJECT", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SUBJECT
		{
			get
			{
				return this._SUBJECT;
			}
			set
			{
				if ((this._SUBJECT != value))
				{
					this.OnSUBJECTChanging(value);
					this.SendPropertyChanging();
					this._SUBJECT = value;
					this.SendPropertyChanged("SUBJECT");
					this.OnSUBJECTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_COMMENT", Storage="_USER", ThisKey="USER_ID", OtherKey="USER_ID", IsForeignKey=true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.COMMENTs.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.COMMENTs.Add(this);
						this._USER_ID = value.USER_ID;
					}
					else
					{
						this._USER_ID = default(int);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
